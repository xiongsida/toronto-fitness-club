{
	"info": {
		"_postman_id": "f7bec8a0-7e95-4913-995f-6cf1821bda48",
		"name": "postman",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "create a user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json();",
							"console.log(data.url)",
							"pm.collectionVariables.set(\"user_url\", data.url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "default"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "http://127.0.0.1:8000/api/users/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"users",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "get and cache the token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json();",
							"console.log(data.access)",
							"pm.collectionVariables.set(\"token\", data.access);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "",
						"value": "",
						"type": "default",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "default"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "http://127.0.0.1:8000/api/token/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"token",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "delete the user we created",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{user_url}}",
					"host": [
						"{{user_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get studios list can be ordered by distance",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8000/api/studios?user_lat=43.7069564&user_lng=-79.3916043&search=&name=&amenities__type=&classes__name=&classes__coach=",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"studios"
					],
					"query": [
						{
							"key": "user_lat",
							"value": "43.7069564",
							"description": "latitue of user's location"
						},
						{
							"key": "user_lng",
							"value": "-79.3916043",
							"description": "longitude of user's location "
						},
						{
							"key": "search",
							"value": "",
							"description": "general search function"
						},
						{
							"key": "name",
							"value": "",
							"description": "studio name filter"
						},
						{
							"key": "amenities__type",
							"value": "",
							"description": "amenity type filter"
						},
						{
							"key": "classes__name",
							"value": "",
							"description": "class name filter"
						},
						{
							"key": "classes__coach",
							"value": "",
							"description": "class coach filter"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a studio details",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8000/api/studios/:studio_id",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"studios",
						":studio_id"
					],
					"variable": [
						{
							"key": "studio_id",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get classes list ordered by time",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8000/api/classes?studio_id=&scope=&search=&class_parent__name=&coach=&date=&date_range_start=&date_range_end=&time_range_start=&time_range_end=",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"classes"
					],
					"query": [
						{
							"key": "studio_id",
							"value": "",
							"description": "when studio id is specified, list classes under this studio, otherwise, list the request users' classes"
						},
						{
							"key": "scope",
							"value": "",
							"description": "this is used when listing user's classes, either \"myschedule\" or \"myhistory\""
						},
						{
							"key": "search",
							"value": "",
							"description": "general search for classes"
						},
						{
							"key": "class_parent__name",
							"value": "",
							"description": "class name filter"
						},
						{
							"key": "coach",
							"value": "",
							"description": "class coach filter"
						},
						{
							"key": "date",
							"value": "",
							"description": "class date filter"
						},
						{
							"key": "date_range_start",
							"value": "",
							"description": "date range query, left end"
						},
						{
							"key": "date_range_end",
							"value": "",
							"description": "date range query, right end"
						},
						{
							"key": "time_range_start",
							"value": "",
							"description": "time range query, left end"
						},
						{
							"key": "time_range_end",
							"value": "",
							"description": "time range query, right end"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Post to enroll classes",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "for_future",
							"value": "1",
							"description": "integer value, either 1 or 0, if not specified, default is 0, if it is 1, enroll for all future instances",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:8000/api/classes/:class_id/enroll",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"classes",
						":class_id",
						"enroll"
					],
					"variable": [
						{
							"key": "class_id",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Post to drop classes",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "for_future",
							"value": "1",
							"description": "integer value, either 1 or 0, if not specified, default is 0",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:8000/api/classes/:class_id/drop",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"classes",
						":class_id",
						"drop"
					],
					"variable": [
						{
							"key": "class_id",
							"value": null
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": "",
			"type": "default"
		},
		{
			"key": "username",
			"value": "chad",
			"type": "default"
		},
		{
			"key": "password",
			"value": "iambestchad",
			"type": "default"
		},
		{
			"key": "user_url",
			"value": "",
			"type": "default"
		}
	]
}